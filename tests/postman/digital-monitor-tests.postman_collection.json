{
	"info": {
		"name": "DigitalMonitor Tests",
		"_postman_id": "d527f81b-7e9a-a62a-16d9-9c2d61cc3bb8",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Client Credentials Token for Tests",
			"description": "",
			"item": [
				{
					"name": "Client Credentials Token Exchange",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a58e2d2-276e-43c3-bb20-44e20c17ca5c",
								"type": "text/javascript",
								"exec": [
									"const schema = {",
									"  \"definitions\": {},",
									"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
									"  \"$id\": \"http://example.com/example.json\",",
									"  \"type\": \"object\",",
									"  \"properties\": {",
									"    \"access_token\": {",
									"      \"$id\": \"/properties/access_token\",",
									"      \"type\": \"string\",",
									"      \"minLength\": 256,",
									"      \"maxLength\": 256",
									"    },",
									"    \"refresh_token\": {",
									"      \"$id\": \"/properties/refresh_token\",",
									"      \"type\": \"string\",",
									"      \"minLength\": 256,",
									"      \"maxLength\": 256",
									"    },",
									"    \"expires_in\": {",
									"      \"$id\": \"/properties/expires_in\",",
									"      \"type\": \"integer\"",
									"    },",
									"    \"token_type\": {",
									"      \"$id\": \"/properties/token_type\",",
									"      \"type\": \"string\",",
									"    }",
									"  }",
									"}",
									"",
									"const responseJson = JSON.parse(responseBody);",
									"",
									"tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
									"tests[\"Response time is acceptable\"] = responseTime < 500;",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
									"",
									"pm.environment.set(\"oauthClientCredentialsToken\", responseJson.access_token);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"grant_type\": \"client_credentials\"\n}"
						},
						"url": {
							"raw": "{{hostname}}/api/oauth2/token",
							"host": [
								"{{hostname}}"
							],
							"path": [
								"api",
								"oauth2",
								"token"
							]
						},
						"description": ""
					},
					"response": []
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "password",
						"value": "password",
						"type": "string"
					},
					{
						"key": "username",
						"value": "dmios",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d31c33af-1a5d-414b-98f2-3219608d31e9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "652dad7c-75a1-4b51-8638-cc26fccbaaca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Users",
			"description": "",
			"item": [
				{
					"name": "Create a new user",
					"description": "Workflow to test creation of a new user",
					"item": [
						{
							"name": "Add a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "25c77851-7eea-4148-bbc6-989dc6f98977",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('userNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "175b8577-1658-4470-a8dd-57dcc79c957b",
										"type": "text/javascript",
										"exec": [
											"postman.setGlobalVariable(\"commonTests\", () =>{",
											"    ",
											"  // The Content-Type must be JSON",
											"  tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
											"",
											"  // The response time must be less than 500 milliseconds",
											"  tests[\"Response time is acceptable\"] = responseTime < 500;",
											"",
											"  // The response body must include an \"id\" property",
											"  const jsonResponse = JSON.parse(responseBody);",
											"  const jsendSchema = JSON.parse(environment.JSendBasicSchema);",
											"  tests[\"Response matches JSend schema\"] = tv4.validate(jsonResponse, jsendSchema);",
											"  tests[\"Response 'status' equals 'success'\"] = jsonResponse.status === \"success\";",
											"})",
											"",
											"eval(globals.commonTests)();",
											"",
											"",
											"const addUserResponse = JSON.parse(responseBody);",
											"const addUserResponseSchema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"user\": {",
											"          \"$id\": \"/properties/data/properties/user\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"firstName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/firstName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"lastName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/lastName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/_id\",",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"email\",",
											"            \"firstName\",",
											"            \"lastName\",",
											"            \"_id\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"user\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"}",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Response schema is valid\"] = tv4.validate(addUserResponse, addUserResponseSchema);",
											"",
											"pm.environment.set('userId', addUserResponse.data.user._id);",
											"pm.environment.set('userEmail', addUserResponse.data.user.email);",
											"",
											"",
											"",
											"pm.sendRequest({",
											"    url: environment.hostname + '/api/oauth2/token',",
											"    method: 'POST',",
											"    header: {",
											"        'Authorization':'Basic ZG1pb3M6cGFzc3dvcmQ=',",
											"        'content-type':'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"        \t\"grant_type\": \"password\",",
											"        \t\"username\": addUserResponse.data.user.email,",
											"        \t\"password\": \"password\"",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    pm.environment.set(\"oauthResourceOwnerToken\", res.json().access_token);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"user{{userNumber}}@mail.com\",\n\t\"password\": \"password\",\n\t\"firstName\": \"firstName{{userNumber}}\",\n\t\"lastName\": \"lastName{{userNumber}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/users",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{oauthClientCredentialsToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "02846f53-b612-4b18-89e5-4222f395c633",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6311cc12-6636-44bb-9f98-b4b134d8db08",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get user details",
					"description": "",
					"item": [
						{
							"name": "Get user by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e085f61-61c5-4383-8d0c-b7f8187cb794",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"const jsonResponse = JSON.parse(responseBody);",
											"const getUserResponseSchema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"user\": {",
											"          \"$id\": \"/properties/data/properties/user\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"firstName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/firstName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"lastName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/lastName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/__v\",",
											"              \"type\": \"integer\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"_id\",",
											"            \"email\",",
											"            \"firstName\",",
											"            \"lastName\",",
											"            \"__v\"",
											"          ]",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"user\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, getUserResponseSchema);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get user by email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d1ae81ed-e639-4cba-9044-a3be5561b76c",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"http://example.com/example.json\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"users\": {",
											"          \"$id\": \"/properties/data/properties/users\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/users/items\",",
											"            \"type\": \"object\",",
											"            \"properties\": {",
											"              \"_id\": {",
											"                \"$id\": \"/properties/data/properties/users/items/properties/_id\",",
											"                \"type\": \"string\"",
											"              },",
											"              \"email\": {",
											"                \"$id\": \"/properties/data/properties/users/items/properties/email\",",
											"                \"type\": \"string\"",
											"              },",
											"              \"firstName\": {",
											"                \"$id\": \"/properties/data/properties/users/items/properties/firstName\",",
											"                \"type\": \"string\"",
											"              },",
											"              \"lastName\": {",
											"                \"$id\": \"/properties/data/properties/users/items/properties/lastName\",",
											"                \"type\": \"string\"",
											"              },",
											"              \"__v\": {",
											"                \"$id\": \"/properties/data/properties/users/items/properties/__v\",",
											"                \"type\": \"integer\"",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"}",
											"",
											"const responseJson = JSON.parse(responseBody);",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users?email={{userEmail}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users"
									],
									"query": [
										{
											"key": "email",
											"value": "{{userEmail}}",
											"equals": true
										}
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Edit user details",
					"description": "",
					"item": [
						{
							"name": "Edit user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set('nonce', Math.floor(Math.random()*100000));"
										],
										"id": "563fd5ef-c6fd-4c82-8f80-3368a2a5c3d1",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"pm.environment.set(\"userEmail\", pm.environment.get(\"nonce\"))"
										],
										"id": "7d9e37d7-7bb2-4dd6-b791-3fdee0fcea7d",
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{nonce}}\",\n\t\"password\": \"{{nonce}}\",\n\t\"firstName\": \"{{nonce}}\",\n\t\"lastName\": \"{{nonce}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete a user",
					"description": "",
					"item": [
						{
							"name": "Delete a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d1e5ef4-59be-4be3-826f-043b0491717d",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{oauthResourceOwnerToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1998edce-5b39-423e-98f3-6967ff3f0a16",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9f378bb3-9420-4bf6-812a-c5edf55bf065",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{oauthResourceOwnerToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fa148639-077f-4685-bf29-43a6f19317aa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "30740a6f-1565-479c-bd35-623bc6533bdc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Organisations",
			"description": "",
			"item": [
				{
					"name": "Create a new organisation",
					"description": "",
					"item": [
						{
							"name": "Add an organisation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a741d381-e8df-4ebf-8748-f243c2e049f5",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('organisationNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e5d7e789-af95-4e49-9121-1b734398fffe",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"const jsonResponse = JSON.parse(responseBody);",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"organisation\": {",
											"          \"$id\": \"/properties/data/properties/organisation\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"applicationIds\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/applications\",",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"title\": \"Empty Object\",",
											"                \"description\": \"Accepts anything iff it's valid JSON.\"",
											"              }",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"name\",",
											"            \"email\",",
											"            \"_id\",",
											"            \"applicationIds\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"organisation\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
											"",
											"pm.environment.set(\"organisationId\",jsonResponse.data.organisation._id);",
											"pm.environment.set(\"organisationEmail\", jsonResponse.data.organisation.email);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{oauthClientCredentialsToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"organisation{{organisationNumber}}\",\n\t\"email\": \"organisation{{organisationNumber}}@mail.com\",\n\t\"password\": \"password\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "username",
								"value": "{{organisationEmail}}",
								"type": "string"
							},
							{
								"key": "password",
								"value": "password",
								"type": "string"
							}
						]
					},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get organisation details",
					"description": "",
					"item": [
						{
							"name": "Get organisation by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9efe19c0-a3bb-49f1-a6d6-7af792121c5c",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"const jsonResponse = JSON.parse(responseBody);",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"organisation\": {",
											"          \"$id\": \"/properties/data/properties/organisation\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"applicationIds\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/applications\",",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"title\": \"Empty Object\",",
											"                \"description\": \"Accepts anything iff it's valid JSON.\"",
											"              }",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"_id\",",
											"            \"name\",",
											"            \"email\",",
											"            \"__v\",",
											"            \"applicationIds\"",
											"          ]",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"organisation\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Edit organisation",
					"description": "",
					"item": [
						{
							"name": "Edit organisation details",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "563fd5ef-c6fd-4c82-8f80-3368a2a5c3d1",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('nonce', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8bfc60eb-c9ed-4f5d-a049-478f285c2f59",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"pm.environment.set(\"organisationEmail\", pm.environment.get(\"nonce\"))"
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"{{nonce}}\",\n\t\"password\": \"{{nonce}}\",\n\t\"name\": \"{{nonce}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"id": "321a9c40-9659-445f-b70d-e13d06655058",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"id": "56f6cc35-8b8e-44cf-9943-f678a12f9327",
								"type": "text/javascript"
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete an organisation",
					"description": "",
					"item": [
						{
							"name": "Delete organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53921155-38cf-414a-bc39-f2db2e734706",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "username",
						"value": "{{organisationEmail}}",
						"type": "string"
					},
					{
						"key": "password",
						"value": "password",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"id": "abd45ff4-0991-49d6-9e46-779f402205e6",
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"id": "47af5a8e-86af-4a5a-b7e5-ea8b95cd0a1f",
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Applications",
			"description": "",
			"item": [
				{
					"name": "Create a new application",
					"description": "",
					"item": [
						{
							"name": "Add an organisation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a741d381-e8df-4ebf-8748-f243c2e049f5",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('organisationNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e5d7e789-af95-4e49-9121-1b734398fffe",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"const jsonResponse = JSON.parse(responseBody);",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"organisation\": {",
											"          \"$id\": \"/properties/data/properties/organisation\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"applicationIds\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/applications\",",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"title\": \"Empty Object\",",
											"                \"description\": \"Accepts anything iff it's valid JSON.\"",
											"              }",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"name\",",
											"            \"email\",",
											"            \"_id\",",
											"            \"applicationIds\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"organisation\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
											"",
											"pm.environment.set(\"organisationId\",jsonResponse.data.organisation._id);",
											"pm.environment.set(\"organisationEmail\", jsonResponse.data.organisation.email);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{oauthClientCredentialsToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"organisation{{organisationNumber}}\",\n\t\"email\": \"organisation{{organisationNumber}}@mail.com\",\n\t\"password\": \"password\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add an organisation application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ccf9fb65-0007-40a6-8e29-12e1b5906075",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('applicationNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a8486a74-563c-47f7-a307-c0a5321462a0",
										"type": "text/javascript",
										"exec": [
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"application\": {",
											"          \"$id\": \"/properties/data/properties/application\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"clientIds\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/clients\",",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"title\": \"Empty Object\",",
											"                \"description\": \"Accepts anything iff it's valid JSON.\"",
											"              }",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"name\",",
											"            \"_id\",",
											"            \"clientIds\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"application\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"const responseJson = JSON.parse(responseBody);",
											"",
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
											"",
											"pm.environment.set(\"applicationId\", responseJson.data.application._id);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"application{{applicationNumber}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										""
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get application details",
					"description": "",
					"item": [
						{
							"name": "Get organisation application by Id ",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6d82a693-cee9-45a1-beae-5c9dd3a22ef2",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"const responseJson = JSON.parse(responseBody);",
											"",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"application\": {",
											"          \"$id\": \"/properties/data/properties/application\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"clientIds\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/clients\",",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"title\": \"Empty Object\",",
											"                \"description\": \"Accepts anything iff it's valid JSON.\"",
											"              }",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"_id\",",
											"            \"name\",",
											"            \"__v\",",
											"            \"clientIds\"",
											"          ]",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"application\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Get organisation applications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "307eae15-06f5-4bd9-a5d1-832e6759129f",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"const responseJson = JSON.parse(responseBody);",
											"",
											"const schema = {",
											"  \"$id\": \"http://example.com/example.json\",",
											"  \"type\": \"object\",",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-07/schema#\",",
											"  \"additionalProperties\": false,",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"additionalProperties\": false,",
											"      \"properties\": {",
											"        \"applications\": {",
											"          \"$id\": \"/properties/data/properties/applications\",",
											"          \"type\": \"array\",",
											"          \"additionalItems\": false,",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/applications/items\",",
											"            \"type\": \"object\",",
											"            \"additionalProperties\": false,",
											"            \"properties\": {",
											"              \"_id\": {",
											"                \"$id\": \"/properties/data/properties/applications/items/properties/_id\",",
											"                \"type\": \"string\"",
											"              },",
											"              \"name\": {",
											"                \"$id\": \"/properties/data/properties/applications/items/properties/name\",",
											"                \"type\": \"string\"",
											"              },",
											"              \"__v\": {",
											"                \"$id\": \"/properties/data/properties/applications/items/properties/__v\",",
											"                \"type\": \"integer\"",
											"              },",
											"              \"clientIds\": {",
											"                \"$id\": \"/properties/data/properties/applications/items/properties/clientIds\",",
											"                \"type\": \"array\",",
											"                \"additionalItems\": false",
											"              }",
											"            }",
											"          }",
											"        }",
											"      }",
											"    }",
											"  }",
											"};",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										""
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Edit application",
					"description": "",
					"item": [
						{
							"name": "Edit organisation application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "563fd5ef-c6fd-4c82-8f80-3368a2a5c3d1",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('nonce', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90af0c7e-ee37-464e-a70f-5c6d88dff4e7",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{nonce}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete an application",
					"description": "",
					"item": [
						{
							"name": "Delete organisation application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53921155-38cf-414a-bc39-f2db2e734706",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53921155-38cf-414a-bc39-f2db2e734706",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "username",
						"value": "{{organisationEmail}}",
						"type": "string"
					},
					{
						"key": "password",
						"value": "password",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"id": "3fdaf9cc-dc2a-45f5-8304-a896cb5afe3f",
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"id": "3235d022-abf6-42bb-809a-03d36859e3a4",
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Clients",
			"description": "",
			"item": [
				{
					"name": "Create a new application client",
					"description": "",
					"item": [
						{
							"name": "Add an organisation",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a741d381-e8df-4ebf-8748-f243c2e049f5",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('organisationNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e5d7e789-af95-4e49-9121-1b734398fffe",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"const jsonResponse = JSON.parse(responseBody);",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"organisation\": {",
											"          \"$id\": \"/properties/data/properties/organisation\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"applicationIds\": {",
											"              \"$id\": \"/properties/data/properties/organisation/properties/applications\",",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"title\": \"Empty Object\",",
											"                \"description\": \"Accepts anything iff it's valid JSON.\"",
											"              }",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"name\",",
											"            \"email\",",
											"            \"_id\",",
											"            \"applicationIds\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"organisation\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
											"",
											"pm.environment.set(\"organisationId\",jsonResponse.data.organisation._id);",
											"pm.environment.set(\"organisationEmail\", jsonResponse.data.organisation.email);"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{oauthClientCredentialsToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"organisation{{organisationNumber}}\",\n\t\"email\": \"organisation{{organisationNumber}}@mail.com\",\n\t\"password\": \"password\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add an organisation application",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ccf9fb65-0007-40a6-8e29-12e1b5906075",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('applicationNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a8486a74-563c-47f7-a307-c0a5321462a0",
										"type": "text/javascript",
										"exec": [
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"application\": {",
											"          \"$id\": \"/properties/data/properties/application\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"clientIds\": {",
											"              \"$id\": \"/properties/data/properties/application/properties/clients\",",
											"              \"type\": \"array\",",
											"              \"items\": {",
											"                \"title\": \"Empty Object\",",
											"                \"description\": \"Accepts anything iff it's valid JSON.\"",
											"              }",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"name\",",
											"            \"_id\",",
											"            \"clientIds\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"application\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"const responseJson = JSON.parse(responseBody);",
											"",
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
											"",
											"pm.environment.set(\"applicationId\", responseJson.data.application._id);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"application{{applicationNumber}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										""
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Add an application client",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5e36ecfb-d986-435f-be41-2becbe9fa272",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('clientNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a9be2156-3ff6-49b5-8a32-7d338cfc0516",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"",
											"const jsonResponse = JSON.parse(responseBody);",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"http://example.com/example.json\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"client\": {",
											"          \"$id\": \"/properties/data/properties/client\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"id\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"secret\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/secret\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"applicationId\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/applicationId\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"redirectUri\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/redirectUri\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/_id\",",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"name\",",
											"            \"id\",",
											"            \"secret\",",
											"            \"applicationId\",",
											"            \"redirectUri\",",
											"            \"_id\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"client\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
											"",
											"pm.environment.set(\"clientId\",jsonResponse.data.client._id);",
											"pm.environment.set(\"oauthClientId\", jsonResponse.data.client.id);",
											"pm.environment.set(\"oauthClientSecret\", jsonResponse.data.client.secret);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"client{{clientNumber}}\",\n    \"id\": \"client{{clientNumber}}\",\n    \"secret\": \"client{{clientNumber}}\", \n    \"redirectUri\": \"{{hostname}}\",\n    \"platform\": \"desktop\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}",
										"clients"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get application client details",
					"description": "",
					"item": [
						{
							"name": "Get application client by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fd05fbff-7826-4184-82fc-320c1b5c4e27",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"const responseJson = JSON.parse(responseBody);",
											"",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"http://example.com/example.json\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"client\": {",
											"          \"$id\": \"/properties/data/properties/client\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/_id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"name\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/name\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"id\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/id\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"applicationId\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/applicationId\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"redirectUri\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/redirectUri\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/client/properties/__v\",",
											"              \"type\": \"integer\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"_id\",",
											"            \"name\",",
											"            \"id\",",
											"            \"applicationId\",",
											"            \"redirectUri\",",
											"            \"__v\"",
											"          ]",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"client\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients/{{clientId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}",
										"clients",
										"{{clientId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Edit client",
					"description": "",
					"item": [
						{
							"name": "Edit application client",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "563fd5ef-c6fd-4c82-8f80-3368a2a5c3d1",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('nonce', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1a5d6521-0375-4d27-9d08-4b3b8b2827d1",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"",
											"pm.environment.set(\"oauthClientId\", environment.nonce);",
											"pm.environment.set(\"oauthClientSecret\", \"client\" + environment.nonce);"
										]
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"{{nonce}}\",\n    \"id\": \"{{nonce}}\",\n    \"secret\": \"{{nonce}}\", \n    \"redirectUri\": \"{{nonce}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients/{{clientId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}",
										"clients",
										"{{clientId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete a client",
					"description": "",
					"item": [
						{
							"name": "Delete application client",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53921155-38cf-414a-bc39-f2db2e734706",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients/{{clientId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}",
										"clients",
										"{{clientId}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete organisation application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53921155-38cf-414a-bc39-f2db2e734706",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}",
										"applications",
										"{{applicationId}}"
									]
								},
								"description": ""
							},
							"response": []
						},
						{
							"name": "Delete organisation",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53921155-38cf-414a-bc39-f2db2e734706",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/organisations/{{organisationId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"organisations",
										"{{organisationId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "username",
						"value": "{{organisationEmail}}",
						"type": "string"
					},
					{
						"key": "password",
						"value": "password",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"id": "43c8141b-c720-4873-8449-af91a3827a4f",
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"id": "132279c2-ca84-4cbe-aa06-3250bc26fc90",
						"type": "text/javascript"
					}
				}
			]
		},
		{
			"name": "Usage Logs",
			"description": "",
			"item": [
				{
					"name": "Create a new user",
					"description": "Workflow to test creation of a new user",
					"item": [
						{
							"name": "Add a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "25c77851-7eea-4148-bbc6-989dc6f98977",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('userNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "175b8577-1658-4470-a8dd-57dcc79c957b",
										"type": "text/javascript",
										"exec": [
											"postman.setGlobalVariable(\"commonTests\", () =>{",
											"    ",
											"  // The Content-Type must be JSON",
											"  tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
											"",
											"  // The response time must be less than 500 milliseconds",
											"  tests[\"Response time is acceptable\"] = responseTime < 500;",
											"",
											"  // The response body must include an \"id\" property",
											"  const jsonResponse = JSON.parse(responseBody);",
											"  const jsendSchema = JSON.parse(environment.JSendBasicSchema);",
											"  tests[\"Response matches JSend schema\"] = tv4.validate(jsonResponse, jsendSchema);",
											"  tests[\"Response 'status' equals 'success'\"] = jsonResponse.status === \"success\";",
											"})",
											"",
											"eval(globals.commonTests)();",
											"",
											"",
											"const addUserResponse = JSON.parse(responseBody);",
											"const addUserResponseSchema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"user\": {",
											"          \"$id\": \"/properties/data/properties/user\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"firstName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/firstName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"lastName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/lastName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/_id\",",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"email\",",
											"            \"firstName\",",
											"            \"lastName\",",
											"            \"_id\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"user\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"}",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Response schema is valid\"] = tv4.validate(addUserResponse, addUserResponseSchema);",
											"",
											"pm.environment.set('userId', addUserResponse.data.user._id);",
											"pm.environment.set('userEmail', addUserResponse.data.user.email);",
											"",
											"",
											"",
											"pm.sendRequest({",
											"    url: environment.hostname + '/api/oauth2/token',",
											"    method: 'POST',",
											"    header: {",
											"        'Authorization':'Basic ZG1pb3M6cGFzc3dvcmQ=',",
											"        'content-type':'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"        \t\"grant_type\": \"password\",",
											"        \t\"username\": addUserResponse.data.user.email,",
											"        \t\"password\": \"password\"",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    pm.environment.set(\"oauthResourceOwnerToken\", res.json().access_token);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"user{{userNumber}}@mail.com\",\n\t\"password\": \"password\",\n\t\"firstName\": \"firstName{{userNumber}}\",\n\t\"lastName\": \"lastName{{userNumber}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/users",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{oauthClientCredentialsToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "02846f53-b612-4b18-89e5-4222f395c633",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6311cc12-6636-44bb-9f98-b4b134d8db08",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create a new usage log",
					"description": "",
					"item": [
						{
							"name": "Add usage log",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "10dc39c4-a97a-4d8b-bf1d-ea82d2c4b422",
										"type": "text/javascript",
										"exec": [
											"const timeNow = new Date().getTime();",
											"",
											"pm.environment.set(\"startTime\", timeNow);",
											"pm.environment.set(\"endTime\", timeNow+10000);",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2e3b55ff-9398-41d8-9e89-1eeab64115a6",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"const schema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"http://example.com/example.json\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"log\": {",
											"          \"$id\": \"/properties/data/properties/log\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/log/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"userId\": {",
											"              \"$id\": \"/properties/data/properties/log/properties/userId\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"clientId\": {",
											"              \"$id\": \"/properties/data/properties/log/properties/clientId\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"log\": {",
											"              \"$id\": \"/properties/data/properties/log/properties/log\",",
											"              \"type\": \"object\",",
											"              \"properties\": {",
											"                \"endTime\": {",
											"                  \"$id\": \"/properties/data/properties/log/properties/log/properties/endTime\",",
											"                  \"type\": \"string\"",
											"                },",
											"                \"startTime\": {",
											"                  \"$id\": \"/properties/data/properties/log/properties/log/properties/startTime\",",
											"                  \"type\": \"string\"",
											"                }",
											"              },",
											"              \"required\": [",
											"                \"endTime\",",
											"                \"startTime\"",
											"              ]",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/log/properties/_id\",",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"userId\",",
											"            \"clientId\",",
											"            \"log\",",
											"            \"_id\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"log\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"};",
											"",
											"const responseJson = JSON.parse(responseBody);",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
											"",
											"pm.environment.set(\"usageLogId\", responseJson.data.log._id);"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"startTime\": \"{{startTime}}\",\n\t\"endTime\": \"{{endTime}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}/usage-logs/",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}",
										"usage-logs",
										""
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get all usage logs for user",
					"description": "",
					"item": [
						{
							"name": "Get all user's usage logs",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5f23afc8-84c2-4406-ba83-b140f4133ac8",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}/usage-logs/",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}",
										"usage-logs",
										""
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Get usage log by ID",
					"description": "",
					"item": [
						{
							"name": "Get a specific usage log by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f90305f-fba7-4906-8bce-c8f2cb39e038",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code === 200;"
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}/usage-logs/{{usageLogId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}",
										"usage-logs",
										"{{usageLogId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{oauthResourceOwnerToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "249a868f-5b14-4226-b1ea-1e2966883801",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0a9d72ae-206f-4f5d-879f-da8ac54bf184",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "OAuth2",
			"description": "Tests for the following exchange endpoints: \n\t- Resource owner credentials\n\t- Client credentials\n\t- Refresh token",
			"item": [
				{
					"name": "Resource Owner Credentials",
					"description": "",
					"item": [
						{
							"name": "Create a new application client",
							"description": "",
							"item": [
								{
									"name": "Add an organisation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a741d381-e8df-4ebf-8748-f243c2e049f5",
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('organisationNumber', Math.floor(Math.random()*100000));"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e5d7e789-af95-4e49-9121-1b734398fffe",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"",
													"const jsonResponse = JSON.parse(responseBody);",
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"https://digitalmonitor.tk/api/\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"status\": {",
													"      \"$id\": \"/properties/status\",",
													"      \"type\": \"string\"",
													"    },",
													"    \"data\": {",
													"      \"$id\": \"/properties/data\",",
													"      \"type\": \"object\",",
													"      \"properties\": {",
													"        \"organisation\": {",
													"          \"$id\": \"/properties/data/properties/organisation\",",
													"          \"type\": \"object\",",
													"          \"properties\": {",
													"            \"__v\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/__v\",",
													"              \"type\": \"integer\"",
													"            },",
													"            \"name\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/name\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"email\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/email\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"_id\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/_id\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"applicationIds\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/applications\",",
													"              \"type\": \"array\",",
													"              \"items\": {",
													"                \"title\": \"Empty Object\",",
													"                \"description\": \"Accepts anything iff it's valid JSON.\"",
													"              }",
													"            }",
													"          },",
													"          \"required\": [",
													"            \"__v\",",
													"            \"name\",",
													"            \"email\",",
													"            \"_id\",",
													"            \"applicationIds\"",
													"          ]",
													"        },",
													"        \"locations\": {",
													"          \"$id\": \"/properties/data/properties/locations\",",
													"          \"type\": \"array\",",
													"          \"items\": {",
													"            \"$id\": \"/properties/data/properties/locations/items\",",
													"            \"type\": \"string\"",
													"          }",
													"        }",
													"      },",
													"      \"required\": [",
													"        \"organisation\",",
													"        \"locations\"",
													"      ]",
													"    }",
													"  },",
													"  \"required\": [",
													"    \"status\",",
													"    \"data\"",
													"  ]",
													"};",
													"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
													"",
													"pm.environment.set(\"organisationId\",jsonResponse.data.organisation._id);",
													"pm.environment.set(\"organisationEmail\", jsonResponse.data.organisation.email);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{oauthClientCredentialsToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"organisation{{organisationNumber}}\",\n\t\"email\": \"organisation{{organisationNumber}}@mail.com\",\n\t\"password\": \"password\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/organisations",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Add an organisation application",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ccf9fb65-0007-40a6-8e29-12e1b5906075",
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('applicationNumber', Math.floor(Math.random()*100000));"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a8486a74-563c-47f7-a307-c0a5321462a0",
												"type": "text/javascript",
												"exec": [
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"https://digitalmonitor.tk/api/\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"status\": {",
													"      \"$id\": \"/properties/status\",",
													"      \"type\": \"string\"",
													"    },",
													"    \"data\": {",
													"      \"$id\": \"/properties/data\",",
													"      \"type\": \"object\",",
													"      \"properties\": {",
													"        \"application\": {",
													"          \"$id\": \"/properties/data/properties/application\",",
													"          \"type\": \"object\",",
													"          \"properties\": {",
													"            \"__v\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/__v\",",
													"              \"type\": \"integer\"",
													"            },",
													"            \"name\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/name\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"_id\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/_id\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"clientIds\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/clients\",",
													"              \"type\": \"array\",",
													"              \"items\": {",
													"                \"title\": \"Empty Object\",",
													"                \"description\": \"Accepts anything iff it's valid JSON.\"",
													"              }",
													"            }",
													"          },",
													"          \"required\": [",
													"            \"__v\",",
													"            \"name\",",
													"            \"_id\",",
													"            \"clientIds\"",
													"          ]",
													"        },",
													"        \"locations\": {",
													"          \"$id\": \"/properties/data/properties/locations\",",
													"          \"type\": \"array\",",
													"          \"items\": {",
													"            \"$id\": \"/properties/data/properties/locations/items\",",
													"            \"type\": \"string\"",
													"          }",
													"        }",
													"      },",
													"      \"required\": [",
													"        \"application\",",
													"        \"locations\"",
													"      ]",
													"    }",
													"  },",
													"  \"required\": [",
													"    \"status\",",
													"    \"data\"",
													"  ]",
													"};",
													"",
													"const responseJson = JSON.parse(responseBody);",
													"",
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
													"",
													"pm.environment.set(\"applicationId\", responseJson.data.application._id);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"application{{applicationNumber}}\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												""
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Add an application client",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5e36ecfb-d986-435f-be41-2becbe9fa272",
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('clientNumber', Math.floor(Math.random()*100000));"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f35d53fe-ab42-4d21-aa88-b58341a068df",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"",
													"const jsonResponse = JSON.parse(responseBody);",
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"http://example.com/example.json\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"status\": {",
													"      \"$id\": \"/properties/status\",",
													"      \"type\": \"string\"",
													"    },",
													"    \"data\": {",
													"      \"$id\": \"/properties/data\",",
													"      \"type\": \"object\",",
													"      \"properties\": {",
													"        \"client\": {",
													"          \"$id\": \"/properties/data/properties/client\",",
													"          \"type\": \"object\",",
													"          \"properties\": {",
													"            \"__v\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/__v\",",
													"              \"type\": \"integer\"",
													"            },",
													"            \"name\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/name\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"id\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/id\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"secret\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/secret\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"applicationId\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/applicationId\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"redirectUri\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/redirectUri\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"_id\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/_id\",",
													"              \"type\": \"string\"",
													"            }",
													"          },",
													"          \"required\": [",
													"            \"__v\",",
													"            \"name\",",
													"            \"id\",",
													"            \"secret\",",
													"            \"applicationId\",",
													"            \"redirectUri\",",
													"            \"_id\"",
													"          ]",
													"        },",
													"        \"locations\": {",
													"          \"$id\": \"/properties/data/properties/locations\",",
													"          \"type\": \"array\",",
													"          \"items\": {",
													"            \"$id\": \"/properties/data/properties/locations/items\",",
													"            \"type\": \"string\"",
													"          }",
													"        }",
													"      },",
													"      \"required\": [",
													"        \"client\",",
													"        \"locations\"",
													"      ]",
													"    }",
													"  },",
													"  \"required\": [",
													"    \"status\",",
													"    \"data\"",
													"  ]",
													"};",
													"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
													"",
													"pm.environment.set(\"clientId\",jsonResponse.data.client._id);",
													"pm.environment.set(\"oauthClientId\", jsonResponse.data.client.id);",
													"pm.environment.set(\"oauthClientSecret\", jsonResponse.data.client.secret);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"client{{clientNumber}}\",\n    \"id\": \"client{{clientNumber}}\",\n    \"secret\": \"client{{clientNumber}}\", \n    \"redirectUri\": \"{{hostname}}\",\n    \"platform\": \"ios\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												"{{applicationId}}",
												"clients"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "username",
										"value": "{{organisationEmail}}",
										"type": "string"
									},
									{
										"key": "password",
										"value": "password",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b6ee472b-956b-49ec-a548-21364067342f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "94394860-62eb-4f07-886a-ae417b4c9dc2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Create a new user",
							"description": "Workflow to test creation of a new user",
							"item": [
								{
									"name": "Add a user",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "25c77851-7eea-4148-bbc6-989dc6f98977",
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('userNumber', Math.floor(Math.random()*100000));"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1e31e46-f6f4-4b8d-b359-e5c3f48d26b0",
												"type": "text/javascript",
												"exec": [
													"postman.setGlobalVariable(\"commonTests\", () =>{",
													"    ",
													"  // The Content-Type must be JSON",
													"  tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
													"",
													"  // The response time must be less than 500 milliseconds",
													"  tests[\"Response time is acceptable\"] = responseTime < 500;",
													"",
													"  // The response body must include an \"id\" property",
													"  const jsonResponse = JSON.parse(responseBody);",
													"  const jsendSchema = JSON.parse(environment.JSendBasicSchema);",
													"  tests[\"Response matches JSend schema\"] = tv4.validate(jsonResponse, jsendSchema);",
													"  tests[\"Response 'status' equals 'success'\"] = jsonResponse.status === \"success\";",
													"})",
													"",
													"eval(globals.commonTests)();",
													"",
													"",
													"const addUserResponse = JSON.parse(responseBody);",
													"const addUserResponseSchema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"https://digitalmonitor.tk/api/\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"status\": {",
													"      \"$id\": \"/properties/status\",",
													"      \"type\": \"string\"",
													"    },",
													"    \"data\": {",
													"      \"$id\": \"/properties/data\",",
													"      \"type\": \"object\",",
													"      \"properties\": {",
													"        \"user\": {",
													"          \"$id\": \"/properties/data/properties/user\",",
													"          \"type\": \"object\",",
													"          \"properties\": {",
													"            \"__v\": {",
													"              \"$id\": \"/properties/data/properties/user/properties/__v\",",
													"              \"type\": \"integer\"",
													"            },",
													"            \"email\": {",
													"              \"$id\": \"/properties/data/properties/user/properties/email\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"firstName\": {",
													"              \"$id\": \"/properties/data/properties/user/properties/firstName\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"lastName\": {",
													"              \"$id\": \"/properties/data/properties/user/properties/lastName\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"_id\": {",
													"              \"$id\": \"/properties/data/properties/user/properties/_id\",",
													"              \"type\": \"string\"",
													"            }",
													"          },",
													"          \"required\": [",
													"            \"__v\",",
													"            \"email\",",
													"            \"firstName\",",
													"            \"lastName\",",
													"            \"_id\"",
													"          ]",
													"        },",
													"        \"locations\": {",
													"          \"$id\": \"/properties/data/properties/locations\",",
													"          \"type\": \"array\",",
													"          \"items\": {",
													"            \"$id\": \"/properties/data/properties/locations/items\",",
													"            \"type\": \"string\"",
													"          }",
													"        }",
													"      },",
													"      \"required\": [",
													"        \"user\",",
													"        \"locations\"",
													"      ]",
													"    }",
													"  },",
													"  \"required\": [",
													"    \"status\",",
													"    \"data\"",
													"  ]",
													"}",
													"",
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"tests[\"Response schema is valid\"] = tv4.validate(addUserResponse, addUserResponseSchema);",
													"",
													"pm.environment.set('userId', addUserResponse.data.user._id);",
													"pm.environment.set('userEmail', addUserResponse.data.user.email);",
													"",
													"pm.sendRequest({",
													"    url: environment.hostname + '/api/oauth2/token',",
													"    method: 'POST',",
													"    header: {",
													"        'Authorization':'Basic ZG1pb3M6cGFzc3dvcmQ=',",
													"        'content-type':'application/json'",
													"    },",
													"    body: {",
													"        mode: 'raw',",
													"        raw: JSON.stringify({",
													"        \t\"grant_type\": \"password\",",
													"        \t\"username\": addUserResponse.data.user.email,",
													"        \t\"password\": \"password\"",
													"        })",
													"    }",
													"}, function (err, res) {",
													"    pm.environment.set(\"oauthResourceOwnerToken\", res.json().access_token);",
													"});"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "",
												"value": ""
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"user{{userNumber}}@mail.com\",\n\t\"password\": \"password\",\n\t\"firstName\": \"firstName{{userNumber}}\",\n\t\"lastName\": \"lastName{{userNumber}}\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/users",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"users"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{oauthClientCredentialsToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f48f81bf-8bf4-49f6-83c9-1fc08a4e5a6c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cb19317d-1f2d-47fc-aed7-a2b9dd630ae2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Token Exchange",
							"description": "",
							"item": [
								{
									"name": "Resource Owner Credentials Exchange",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf6c0468-dff3-48c9-8651-c11d597a78eb",
												"type": "text/javascript",
												"exec": [
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"http://example.com/example.json\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"access_token\": {",
													"      \"$id\": \"/properties/access_token\",",
													"      \"type\": \"string\",",
													"      \"minLength\": 256,",
													"      \"maxLength\": 256",
													"    },",
													"    \"refresh_token\": {",
													"      \"$id\": \"/properties/refresh_token\",",
													"      \"type\": \"string\",",
													"      \"minLength\": 256,",
													"      \"maxLength\": 256",
													"    },",
													"    \"expires_in\": {",
													"      \"$id\": \"/properties/expires_in\",",
													"      \"type\": \"integer\"",
													"    },",
													"    \"token_type\": {",
													"      \"$id\": \"/properties/token_type\",",
													"      \"type\": \"string\",",
													"    }",
													"  }",
													"}",
													"",
													"const responseJson = JSON.parse(responseBody);",
													"",
													"tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
													"tests[\"Response time is acceptable\"] = responseTime < 500;",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
													"",
													"pm.environment.set(\"oauthAccessToken\", responseJson.access_token);",
													"",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "password",
													"type": "string"
												},
												{
													"key": "username",
													"value": "dmios",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"grant_type\": \"password\",\n\t\"username\": \"{{userEmail}}\",\n\t\"password\": \"password\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/oauth2/token",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"oauth2",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Access Authenticated Endpoint",
							"description": "",
							"item": [
								{
									"name": "Usage Logs",
									"description": "",
									"item": [
										{
											"name": "Add usage log",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "10dc39c4-a97a-4d8b-bf1d-ea82d2c4b422",
														"type": "text/javascript",
														"exec": [
															"const timeNow = new Date().getTime();",
															"",
															"pm.environment.set(\"startTime\", timeNow);",
															"pm.environment.set(\"endTime\", timeNow+10000);",
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "2e3b55ff-9398-41d8-9e89-1eeab64115a6",
														"type": "text/javascript",
														"exec": [
															"eval(globals.commonTests)();",
															"",
															"const schema = {",
															"  \"definitions\": {},",
															"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
															"  \"$id\": \"http://example.com/example.json\",",
															"  \"type\": \"object\",",
															"  \"properties\": {",
															"    \"status\": {",
															"      \"$id\": \"/properties/status\",",
															"      \"type\": \"string\"",
															"    },",
															"    \"data\": {",
															"      \"$id\": \"/properties/data\",",
															"      \"type\": \"object\",",
															"      \"properties\": {",
															"        \"log\": {",
															"          \"$id\": \"/properties/data/properties/log\",",
															"          \"type\": \"object\",",
															"          \"properties\": {",
															"            \"__v\": {",
															"              \"$id\": \"/properties/data/properties/log/properties/__v\",",
															"              \"type\": \"integer\"",
															"            },",
															"            \"userId\": {",
															"              \"$id\": \"/properties/data/properties/log/properties/userId\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"clientId\": {",
															"              \"$id\": \"/properties/data/properties/log/properties/clientId\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"log\": {",
															"              \"$id\": \"/properties/data/properties/log/properties/log\",",
															"              \"type\": \"object\",",
															"              \"properties\": {",
															"                \"endTime\": {",
															"                  \"$id\": \"/properties/data/properties/log/properties/log/properties/endTime\",",
															"                  \"type\": \"string\"",
															"                },",
															"                \"startTime\": {",
															"                  \"$id\": \"/properties/data/properties/log/properties/log/properties/startTime\",",
															"                  \"type\": \"string\"",
															"                }",
															"              },",
															"              \"required\": [",
															"                \"endTime\",",
															"                \"startTime\"",
															"              ]",
															"            },",
															"            \"_id\": {",
															"              \"$id\": \"/properties/data/properties/log/properties/_id\",",
															"              \"type\": \"string\"",
															"            }",
															"          },",
															"          \"required\": [",
															"            \"__v\",",
															"            \"userId\",",
															"            \"clientId\",",
															"            \"log\",",
															"            \"_id\"",
															"          ]",
															"        },",
															"        \"locations\": {",
															"          \"$id\": \"/properties/data/properties/locations\",",
															"          \"type\": \"array\",",
															"          \"items\": {",
															"            \"$id\": \"/properties/data/properties/locations/items\",",
															"            \"type\": \"string\"",
															"          }",
															"        }",
															"      },",
															"      \"required\": [",
															"        \"log\",",
															"        \"locations\"",
															"      ]",
															"    }",
															"  },",
															"  \"required\": [",
															"    \"status\",",
															"    \"data\"",
															"  ]",
															"};",
															"",
															"const responseJson = JSON.parse(responseBody);",
															"",
															"tests[\"Status code is 201\"] = responseCode.code === 201;",
															"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
															"",
															"pm.environment.set(\"usageLogId\", responseJson.data.log._id);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"startTime\": \"{{startTime}}\",\n\t\"endTime\": \"{{endTime}}\"\n}"
												},
												"url": {
													"raw": "{{hostname}}/api/users/{{userId}}/usage-logs/",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"users",
														"{{userId}}",
														"usage-logs",
														""
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Get all user's usage logs",
											"request": {
												"method": "GET",
												"header": [],
												"body": {},
												"url": {
													"raw": "{{hostname}}/api/users/{{userId}}/usage-logs/",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"users",
														"{{userId}}",
														"usage-logs",
														""
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Get a specific usage log by ID",
											"request": {
												"method": "GET",
												"header": [],
												"body": {},
												"url": {
													"raw": "{{hostname}}/api/users/{{userId}}/usage-logs/{{usageLogId}}",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"users",
														"{{userId}}",
														"usage-logs",
														"{{usageLogId}}"
													]
												},
												"description": ""
											},
											"response": []
										}
									],
									"auth": {
										"type": "bearer",
										"bearer": [
											{
												"key": "token",
												"value": "{{oauthAccessToken}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"id": "249a868f-5b14-4226-b1ea-1e2966883801",
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"id": "0a9d72ae-206f-4f5d-879f-da8ac54bf184",
												"type": "text/javascript"
											}
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete a client",
							"description": "",
							"item": [
								{
									"name": "Delete application client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "53921155-38cf-414a-bc39-f2db2e734706",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 200\"] = responseCode.code = 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients/{{clientId}}",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												"{{applicationId}}",
												"clients",
												"{{clientId}}"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Delete organisation application",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "53921155-38cf-414a-bc39-f2db2e734706",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 200\"] = responseCode.code = 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												"{{applicationId}}"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Delete organisation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "53921155-38cf-414a-bc39-f2db2e734706",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 200\"] = responseCode.code = 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "{{organisationEmail}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "5293d0e4-df07-46a8-b116-5a7f1dd6cd1d",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "68d2c719-d72b-4afb-8c13-0fd4e37c74bb",
										"type": "text/javascript"
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete a user",
							"description": "",
							"item": [
								{
									"name": "Delete a user",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3d1e5ef4-59be-4be3-826f-043b0491717d",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 200\"] = responseCode.code = 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{hostname}}/api/users/{{userId}}",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"users",
												"{{userId}}"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"auth": {
								"type": "bearer",
								"bearer": [
									{
										"key": "token",
										"value": "{{oauthResourceOwnerToken}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1b7a4655-b3fd-4e56-8753-ea0e748a9469",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9a3c4372-5907-4f13-9afd-d0c7dca39381",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Client Credentials",
					"description": "",
					"item": [
						{
							"name": "Create a new application client",
							"description": "",
							"item": [
								{
									"name": "Add an organisation",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a741d381-e8df-4ebf-8748-f243c2e049f5",
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('organisationNumber', Math.floor(Math.random()*100000));"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e5d7e789-af95-4e49-9121-1b734398fffe",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"",
													"const jsonResponse = JSON.parse(responseBody);",
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"https://digitalmonitor.tk/api/\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"status\": {",
													"      \"$id\": \"/properties/status\",",
													"      \"type\": \"string\"",
													"    },",
													"    \"data\": {",
													"      \"$id\": \"/properties/data\",",
													"      \"type\": \"object\",",
													"      \"properties\": {",
													"        \"organisation\": {",
													"          \"$id\": \"/properties/data/properties/organisation\",",
													"          \"type\": \"object\",",
													"          \"properties\": {",
													"            \"__v\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/__v\",",
													"              \"type\": \"integer\"",
													"            },",
													"            \"name\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/name\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"email\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/email\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"_id\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/_id\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"applicationIds\": {",
													"              \"$id\": \"/properties/data/properties/organisation/properties/applications\",",
													"              \"type\": \"array\",",
													"              \"items\": {",
													"                \"title\": \"Empty Object\",",
													"                \"description\": \"Accepts anything iff it's valid JSON.\"",
													"              }",
													"            }",
													"          },",
													"          \"required\": [",
													"            \"__v\",",
													"            \"name\",",
													"            \"email\",",
													"            \"_id\",",
													"            \"applicationIds\"",
													"          ]",
													"        },",
													"        \"locations\": {",
													"          \"$id\": \"/properties/data/properties/locations\",",
													"          \"type\": \"array\",",
													"          \"items\": {",
													"            \"$id\": \"/properties/data/properties/locations/items\",",
													"            \"type\": \"string\"",
													"          }",
													"        }",
													"      },",
													"      \"required\": [",
													"        \"organisation\",",
													"        \"locations\"",
													"      ]",
													"    }",
													"  },",
													"  \"required\": [",
													"    \"status\",",
													"    \"data\"",
													"  ]",
													"};",
													"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
													"",
													"pm.environment.set(\"organisationId\",jsonResponse.data.organisation._id);",
													"pm.environment.set(\"organisationEmail\", jsonResponse.data.organisation.email);"
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{oauthClientCredentialsToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"organisation{{organisationNumber}}\",\n\t\"email\": \"organisation{{organisationNumber}}@mail.com\",\n\t\"password\": \"password\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/organisations",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Add an organisation application",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ccf9fb65-0007-40a6-8e29-12e1b5906075",
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('applicationNumber', Math.floor(Math.random()*100000));"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a8486a74-563c-47f7-a307-c0a5321462a0",
												"type": "text/javascript",
												"exec": [
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"https://digitalmonitor.tk/api/\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"status\": {",
													"      \"$id\": \"/properties/status\",",
													"      \"type\": \"string\"",
													"    },",
													"    \"data\": {",
													"      \"$id\": \"/properties/data\",",
													"      \"type\": \"object\",",
													"      \"properties\": {",
													"        \"application\": {",
													"          \"$id\": \"/properties/data/properties/application\",",
													"          \"type\": \"object\",",
													"          \"properties\": {",
													"            \"__v\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/__v\",",
													"              \"type\": \"integer\"",
													"            },",
													"            \"name\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/name\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"_id\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/_id\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"clientIds\": {",
													"              \"$id\": \"/properties/data/properties/application/properties/clients\",",
													"              \"type\": \"array\",",
													"              \"items\": {",
													"                \"title\": \"Empty Object\",",
													"                \"description\": \"Accepts anything iff it's valid JSON.\"",
													"              }",
													"            }",
													"          },",
													"          \"required\": [",
													"            \"__v\",",
													"            \"name\",",
													"            \"_id\",",
													"            \"clientIds\"",
													"          ]",
													"        },",
													"        \"locations\": {",
													"          \"$id\": \"/properties/data/properties/locations\",",
													"          \"type\": \"array\",",
													"          \"items\": {",
													"            \"$id\": \"/properties/data/properties/locations/items\",",
													"            \"type\": \"string\"",
													"          }",
													"        }",
													"      },",
													"      \"required\": [",
													"        \"application\",",
													"        \"locations\"",
													"      ]",
													"    }",
													"  },",
													"  \"required\": [",
													"    \"status\",",
													"    \"data\"",
													"  ]",
													"};",
													"",
													"const responseJson = JSON.parse(responseBody);",
													"",
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
													"",
													"pm.environment.set(\"applicationId\", responseJson.data.application._id);",
													""
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"application{{applicationNumber}}\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												""
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Add an application client",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "5e36ecfb-d986-435f-be41-2becbe9fa272",
												"type": "text/javascript",
												"exec": [
													"pm.environment.set('clientNumber', Math.floor(Math.random()*100000));"
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7f22c053-7db8-4bd9-bca2-b46c7dcb276f",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 201\"] = responseCode.code === 201;",
													"",
													"const jsonResponse = JSON.parse(responseBody);",
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"http://example.com/example.json\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"status\": {",
													"      \"$id\": \"/properties/status\",",
													"      \"type\": \"string\"",
													"    },",
													"    \"data\": {",
													"      \"$id\": \"/properties/data\",",
													"      \"type\": \"object\",",
													"      \"properties\": {",
													"        \"client\": {",
													"          \"$id\": \"/properties/data/properties/client\",",
													"          \"type\": \"object\",",
													"          \"properties\": {",
													"            \"__v\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/__v\",",
													"              \"type\": \"integer\"",
													"            },",
													"            \"name\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/name\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"id\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/id\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"secret\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/secret\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"applicationId\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/applicationId\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"redirectUri\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/redirectUri\",",
													"              \"type\": \"string\"",
													"            },",
													"            \"_id\": {",
													"              \"$id\": \"/properties/data/properties/client/properties/_id\",",
													"              \"type\": \"string\"",
													"            }",
													"          },",
													"          \"required\": [",
													"            \"__v\",",
													"            \"name\",",
													"            \"id\",",
													"            \"secret\",",
													"            \"applicationId\",",
													"            \"redirectUri\",",
													"            \"_id\"",
													"          ]",
													"        },",
													"        \"locations\": {",
													"          \"$id\": \"/properties/data/properties/locations\",",
													"          \"type\": \"array\",",
													"          \"items\": {",
													"            \"$id\": \"/properties/data/properties/locations/items\",",
													"            \"type\": \"string\"",
													"          }",
													"        }",
													"      },",
													"      \"required\": [",
													"        \"client\",",
													"        \"locations\"",
													"      ]",
													"    }",
													"  },",
													"  \"required\": [",
													"    \"status\",",
													"    \"data\"",
													"  ]",
													"};",
													"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
													"",
													"pm.environment.set(\"clientId\",jsonResponse.data.client._id);",
													"pm.environment.set(\"oauthClientId\", jsonResponse.data.client.id);",
													"pm.environment.set(\"oauthClientSecret\", jsonResponse.data.client.secret);"
												]
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"client{{clientNumber}}\",\n    \"id\": \"client{{clientNumber}}\",\n    \"secret\": \"client{{clientNumber}}\", \n    \"redirectUri\": \"{{hostname}}\",\n    \"platform\": \"ios\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												"{{applicationId}}",
												"clients"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "{{organisationEmail}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "b6ee472b-956b-49ec-a548-21364067342f",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "94394860-62eb-4f07-886a-ae417b4c9dc2",
										"type": "text/javascript"
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Token Exchange",
							"description": "",
							"item": [
								{
									"name": "Client Credentials Token Exchange",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6efd3bce-b3dd-432a-a47f-f65a88b4e74e",
												"type": "text/javascript",
												"exec": [
													"const schema = {",
													"  \"definitions\": {},",
													"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
													"  \"$id\": \"http://example.com/example.json\",",
													"  \"type\": \"object\",",
													"  \"properties\": {",
													"    \"access_token\": {",
													"      \"$id\": \"/properties/access_token\",",
													"      \"type\": \"string\",",
													"      \"minLength\": 256,",
													"      \"maxLength\": 256",
													"    },",
													"    \"refresh_token\": {",
													"      \"$id\": \"/properties/refresh_token\",",
													"      \"type\": \"string\",",
													"      \"minLength\": 256,",
													"      \"maxLength\": 256",
													"    },",
													"    \"expires_in\": {",
													"      \"$id\": \"/properties/expires_in\",",
													"      \"type\": \"integer\"",
													"    },",
													"    \"token_type\": {",
													"      \"$id\": \"/properties/token_type\",",
													"      \"type\": \"string\",",
													"    }",
													"  }",
													"}",
													"",
													"const responseJson = JSON.parse(responseBody);",
													"",
													"tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
													"tests[\"Response time is acceptable\"] = responseTime < 500;",
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
													"",
													"pm.environment.set(\"oauthAccessToken\", responseJson.access_token);",
													"",
													""
												]
											}
										}
									],
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "username",
													"value": "{{oauthClientId}}",
													"type": "string"
												},
												{
													"key": "password",
													"value": "{{oauthClientSecret}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"grant_type\": \"client_credentials\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/oauth2/token",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"oauth2",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "{{oauthClientSecret}}",
										"type": "string"
									},
									{
										"key": "username",
										"value": "{{oauthClientId}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "ca109f3c-432d-467c-8ef6-154bb78ab0c3",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "d3a0d509-bb4d-4967-bbe8-c93e30567bf1",
										"type": "text/javascript"
									}
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete a client",
							"description": "",
							"item": [
								{
									"name": "Delete application client",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "53921155-38cf-414a-bc39-f2db2e734706",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 200\"] = responseCode.code = 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients/{{clientId}}",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												"{{applicationId}}",
												"clients",
												"{{clientId}}"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Delete organisation application",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "53921155-38cf-414a-bc39-f2db2e734706",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 200\"] = responseCode.code = 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}",
												"applications",
												"{{applicationId}}"
											]
										},
										"description": ""
									},
									"response": []
								},
								{
									"name": "Delete organisation",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "53921155-38cf-414a-bc39-f2db2e734706",
												"type": "text/javascript",
												"exec": [
													"eval(globals.commonTests)();",
													"",
													"tests[\"Status code is 200\"] = responseCode.code = 200;",
													""
												]
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {},
										"url": {
											"raw": "{{hostname}}/api/organisations/{{organisationId}}",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"organisations",
												"{{organisationId}}"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"auth": {
								"type": "basic",
								"basic": [
									{
										"key": "password",
										"value": "password",
										"type": "string"
									},
									{
										"key": "username",
										"value": "{{organisationEmail}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"id": "5293d0e4-df07-46a8-b116-5a7f1dd6cd1d",
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"id": "68d2c719-d72b-4afb-8c13-0fd4e37c74bb",
										"type": "text/javascript"
									}
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Refresh Token",
					"description": "",
					"item": [
						{
							"name": "Client Credentials Exchange",
							"description": "",
							"item": [
								{
									"name": "Create a new application client",
									"description": "",
									"item": [
										{
											"name": "Add an organisation",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set('organisationNumber', Math.floor(Math.random()*100000));"
														],
														"id": "a741d381-e8df-4ebf-8748-f243c2e049f5",
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"eval(globals.commonTests)();",
															"",
															"tests[\"Status code is 201\"] = responseCode.code === 201;",
															"",
															"const jsonResponse = JSON.parse(responseBody);",
															"const schema = {",
															"  \"definitions\": {},",
															"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
															"  \"$id\": \"https://digitalmonitor.tk/api/\",",
															"  \"type\": \"object\",",
															"  \"properties\": {",
															"    \"status\": {",
															"      \"$id\": \"/properties/status\",",
															"      \"type\": \"string\"",
															"    },",
															"    \"data\": {",
															"      \"$id\": \"/properties/data\",",
															"      \"type\": \"object\",",
															"      \"properties\": {",
															"        \"organisation\": {",
															"          \"$id\": \"/properties/data/properties/organisation\",",
															"          \"type\": \"object\",",
															"          \"properties\": {",
															"            \"__v\": {",
															"              \"$id\": \"/properties/data/properties/organisation/properties/__v\",",
															"              \"type\": \"integer\"",
															"            },",
															"            \"name\": {",
															"              \"$id\": \"/properties/data/properties/organisation/properties/name\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"email\": {",
															"              \"$id\": \"/properties/data/properties/organisation/properties/email\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"_id\": {",
															"              \"$id\": \"/properties/data/properties/organisation/properties/_id\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"applicationIds\": {",
															"              \"$id\": \"/properties/data/properties/organisation/properties/applications\",",
															"              \"type\": \"array\",",
															"              \"items\": {",
															"                \"title\": \"Empty Object\",",
															"                \"description\": \"Accepts anything iff it's valid JSON.\"",
															"              }",
															"            }",
															"          },",
															"          \"required\": [",
															"            \"__v\",",
															"            \"name\",",
															"            \"email\",",
															"            \"_id\",",
															"            \"applicationIds\"",
															"          ]",
															"        },",
															"        \"locations\": {",
															"          \"$id\": \"/properties/data/properties/locations\",",
															"          \"type\": \"array\",",
															"          \"items\": {",
															"            \"$id\": \"/properties/data/properties/locations/items\",",
															"            \"type\": \"string\"",
															"          }",
															"        }",
															"      },",
															"      \"required\": [",
															"        \"organisation\",",
															"        \"locations\"",
															"      ]",
															"    }",
															"  },",
															"  \"required\": [",
															"    \"status\",",
															"    \"data\"",
															"  ]",
															"};",
															"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
															"",
															"pm.environment.set(\"organisationId\",jsonResponse.data.organisation._id);",
															"pm.environment.set(\"organisationEmail\", jsonResponse.data.organisation.email);"
														],
														"id": "e5d7e789-af95-4e49-9121-1b734398fffe",
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{oauthClientCredentialsToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"organisation{{organisationNumber}}\",\n\t\"email\": \"organisation{{organisationNumber}}@mail.com\",\n\t\"password\": \"password\"\n}"
												},
												"url": {
													"raw": "{{hostname}}/api/organisations",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"organisations"
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Add an organisation application",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"exec": [
															"pm.environment.set('applicationNumber', Math.floor(Math.random()*100000));"
														],
														"id": "ccf9fb65-0007-40a6-8e29-12e1b5906075",
														"type": "text/javascript"
													}
												},
												{
													"listen": "test",
													"script": {
														"exec": [
															"const schema = {",
															"  \"definitions\": {},",
															"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
															"  \"$id\": \"https://digitalmonitor.tk/api/\",",
															"  \"type\": \"object\",",
															"  \"properties\": {",
															"    \"status\": {",
															"      \"$id\": \"/properties/status\",",
															"      \"type\": \"string\"",
															"    },",
															"    \"data\": {",
															"      \"$id\": \"/properties/data\",",
															"      \"type\": \"object\",",
															"      \"properties\": {",
															"        \"application\": {",
															"          \"$id\": \"/properties/data/properties/application\",",
															"          \"type\": \"object\",",
															"          \"properties\": {",
															"            \"__v\": {",
															"              \"$id\": \"/properties/data/properties/application/properties/__v\",",
															"              \"type\": \"integer\"",
															"            },",
															"            \"name\": {",
															"              \"$id\": \"/properties/data/properties/application/properties/name\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"_id\": {",
															"              \"$id\": \"/properties/data/properties/application/properties/_id\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"clientIds\": {",
															"              \"$id\": \"/properties/data/properties/application/properties/clients\",",
															"              \"type\": \"array\",",
															"              \"items\": {",
															"                \"title\": \"Empty Object\",",
															"                \"description\": \"Accepts anything iff it's valid JSON.\"",
															"              }",
															"            }",
															"          },",
															"          \"required\": [",
															"            \"__v\",",
															"            \"name\",",
															"            \"_id\",",
															"            \"clientIds\"",
															"          ]",
															"        },",
															"        \"locations\": {",
															"          \"$id\": \"/properties/data/properties/locations\",",
															"          \"type\": \"array\",",
															"          \"items\": {",
															"            \"$id\": \"/properties/data/properties/locations/items\",",
															"            \"type\": \"string\"",
															"          }",
															"        }",
															"      },",
															"      \"required\": [",
															"        \"application\",",
															"        \"locations\"",
															"      ]",
															"    }",
															"  },",
															"  \"required\": [",
															"    \"status\",",
															"    \"data\"",
															"  ]",
															"};",
															"",
															"const responseJson = JSON.parse(responseBody);",
															"",
															"eval(globals.commonTests)();",
															"",
															"tests[\"Status code is 201\"] = responseCode.code === 201;",
															"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
															"",
															"pm.environment.set(\"applicationId\", responseJson.data.application._id);",
															""
														],
														"id": "a8486a74-563c-47f7-a307-c0a5321462a0",
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"application{{applicationNumber}}\"\n}"
												},
												"url": {
													"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"organisations",
														"{{organisationId}}",
														"applications",
														""
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Add an application client",
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "5e36ecfb-d986-435f-be41-2becbe9fa272",
														"type": "text/javascript",
														"exec": [
															"pm.environment.set('clientNumber', Math.floor(Math.random()*100000));"
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "ff0ca4fe-8deb-4a2a-9253-186598f2951d",
														"type": "text/javascript",
														"exec": [
															"eval(globals.commonTests)();",
															"",
															"tests[\"Status code is 201\"] = responseCode.code === 201;",
															"",
															"const jsonResponse = JSON.parse(responseBody);",
															"const schema = {",
															"  \"definitions\": {},",
															"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
															"  \"$id\": \"http://example.com/example.json\",",
															"  \"type\": \"object\",",
															"  \"properties\": {",
															"    \"status\": {",
															"      \"$id\": \"/properties/status\",",
															"      \"type\": \"string\"",
															"    },",
															"    \"data\": {",
															"      \"$id\": \"/properties/data\",",
															"      \"type\": \"object\",",
															"      \"properties\": {",
															"        \"client\": {",
															"          \"$id\": \"/properties/data/properties/client\",",
															"          \"type\": \"object\",",
															"          \"properties\": {",
															"            \"__v\": {",
															"              \"$id\": \"/properties/data/properties/client/properties/__v\",",
															"              \"type\": \"integer\"",
															"            },",
															"            \"name\": {",
															"              \"$id\": \"/properties/data/properties/client/properties/name\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"id\": {",
															"              \"$id\": \"/properties/data/properties/client/properties/id\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"secret\": {",
															"              \"$id\": \"/properties/data/properties/client/properties/secret\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"applicationId\": {",
															"              \"$id\": \"/properties/data/properties/client/properties/applicationId\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"redirectUri\": {",
															"              \"$id\": \"/properties/data/properties/client/properties/redirectUri\",",
															"              \"type\": \"string\"",
															"            },",
															"            \"_id\": {",
															"              \"$id\": \"/properties/data/properties/client/properties/_id\",",
															"              \"type\": \"string\"",
															"            }",
															"          },",
															"          \"required\": [",
															"            \"__v\",",
															"            \"name\",",
															"            \"id\",",
															"            \"secret\",",
															"            \"applicationId\",",
															"            \"redirectUri\",",
															"            \"_id\"",
															"          ]",
															"        },",
															"        \"locations\": {",
															"          \"$id\": \"/properties/data/properties/locations\",",
															"          \"type\": \"array\",",
															"          \"items\": {",
															"            \"$id\": \"/properties/data/properties/locations/items\",",
															"            \"type\": \"string\"",
															"          }",
															"        }",
															"      },",
															"      \"required\": [",
															"        \"client\",",
															"        \"locations\"",
															"      ]",
															"    }",
															"  },",
															"  \"required\": [",
															"    \"status\",",
															"    \"data\"",
															"  ]",
															"};",
															"tests[\"Response schema is valid\"] = tv4.validate(jsonResponse, schema);",
															"",
															"pm.environment.set(\"clientId\",jsonResponse.data.client._id);",
															"pm.environment.set(\"oauthClientId\", jsonResponse.data.client.id);",
															"pm.environment.set(\"oauthClientSecret\", jsonResponse.data.client.secret);"
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"client{{clientNumber}}\",\n    \"id\": \"client{{clientNumber}}\",\n    \"secret\": \"client{{clientNumber}}\", \n    \"redirectUri\": \"{{hostname}}\",\n    \"platform\": \"ios\"\n}"
												},
												"url": {
													"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"organisations",
														"{{organisationId}}",
														"applications",
														"{{applicationId}}",
														"clients"
													]
												},
												"description": ""
											},
											"response": []
										}
									],
									"auth": {
										"type": "basic",
										"basic": [
											{
												"key": "password",
												"value": "password",
												"type": "string"
											},
											{
												"key": "username",
												"value": "{{organisationEmail}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"id": "b6ee472b-956b-49ec-a548-21364067342f",
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"id": "94394860-62eb-4f07-886a-ae417b4c9dc2",
												"type": "text/javascript"
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Token Exchange",
									"description": "",
									"item": [
										{
											"name": "Client Credentials Token Exchange",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1c970a30-2202-4999-b0c4-9f149037088f",
														"type": "text/javascript",
														"exec": [
															"const schema = {",
															"  \"definitions\": {},",
															"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
															"  \"$id\": \"http://example.com/example.json\",",
															"  \"type\": \"object\",",
															"  \"properties\": {",
															"    \"access_token\": {",
															"      \"$id\": \"/properties/access_token\",",
															"      \"type\": \"string\",",
															"      \"minLength\": 256,",
															"      \"maxLength\": 256",
															"    },",
															"    \"refresh_token\": {",
															"      \"$id\": \"/properties/refresh_token\",",
															"      \"type\": \"string\",",
															"      \"minLength\": 256,",
															"      \"maxLength\": 256",
															"    },",
															"    \"expires_in\": {",
															"      \"$id\": \"/properties/expires_in\",",
															"      \"type\": \"integer\"",
															"    },",
															"    \"token_type\": {",
															"      \"$id\": \"/properties/token_type\",",
															"      \"type\": \"string\",",
															"    }",
															"  }",
															"}",
															"",
															"const responseJson = JSON.parse(responseBody);",
															"",
															"tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
															"tests[\"Response time is acceptable\"] = responseTime < 500;",
															"tests[\"Status code is 200\"] = responseCode.code === 200;",
															"tests[\"Response schema is valid\"] = tv4.validate(responseJson, schema);",
															"",
															"pm.environment.set(\"oauthRefreshToken\", responseJson.refresh_token);",
															"",
															""
														]
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"grant_type\": \"client_credentials\"\n}"
												},
												"url": {
													"raw": "{{hostname}}/api/oauth2/token",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"oauth2",
														"token"
													]
												},
												"description": ""
											},
											"response": []
										}
									],
									"auth": {
										"type": "basic",
										"basic": [
											{
												"key": "password",
												"value": "{{oauthClientSecret}}",
												"type": "string"
											},
											{
												"key": "username",
												"value": "{{oauthClientId}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"id": "ca109f3c-432d-467c-8ef6-154bb78ab0c3",
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"id": "d3a0d509-bb4d-4967-bbe8-c93e30567bf1",
												"type": "text/javascript"
											}
										}
									],
									"_postman_isSubFolder": true
								},
								{
									"name": "Delete a client",
									"description": "",
									"item": [
										{
											"name": "Delete application client",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"eval(globals.commonTests)();",
															"",
															"tests[\"Status code is 200\"] = responseCode.code = 200;",
															""
														],
														"id": "53921155-38cf-414a-bc39-f2db2e734706",
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {},
												"url": {
													"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}/clients/{{clientId}}",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"organisations",
														"{{organisationId}}",
														"applications",
														"{{applicationId}}",
														"clients",
														"{{clientId}}"
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Delete organisation application",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"eval(globals.commonTests)();",
															"",
															"tests[\"Status code is 200\"] = responseCode.code = 200;",
															""
														],
														"id": "53921155-38cf-414a-bc39-f2db2e734706",
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {},
												"url": {
													"raw": "{{hostname}}/api/organisations/{{organisationId}}/applications/{{applicationId}}",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"organisations",
														"{{organisationId}}",
														"applications",
														"{{applicationId}}"
													]
												},
												"description": ""
											},
											"response": []
										},
										{
											"name": "Delete organisation",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"eval(globals.commonTests)();",
															"",
															"tests[\"Status code is 200\"] = responseCode.code = 200;",
															""
														],
														"id": "53921155-38cf-414a-bc39-f2db2e734706",
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {},
												"url": {
													"raw": "{{hostname}}/api/organisations/{{organisationId}}",
													"host": [
														"{{hostname}}"
													],
													"path": [
														"api",
														"organisations",
														"{{organisationId}}"
													]
												},
												"description": ""
											},
											"response": []
										}
									],
									"auth": {
										"type": "basic",
										"basic": [
											{
												"key": "password",
												"value": "password",
												"type": "string"
											},
											{
												"key": "username",
												"value": "{{organisationEmail}}",
												"type": "string"
											}
										]
									},
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"id": "5293d0e4-df07-46a8-b116-5a7f1dd6cd1d",
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"id": "68d2c719-d72b-4afb-8c13-0fd4e37c74bb",
												"type": "text/javascript"
											}
										}
									],
									"_postman_isSubFolder": true
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Refresh Token Exchange",
							"description": "",
							"item": [
								{
									"name": "Refresh Token Exchange",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"grant_type\": \"refresh_token\",\n\t\"refresh_token\": \"{{oauthRefreshToken}}\"\n}"
										},
										"url": {
											"raw": "{{hostname}}/api/oauth2/token",
											"host": [
												"{{hostname}}"
											],
											"path": [
												"api",
												"oauth2",
												"token"
											]
										},
										"description": ""
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "password",
								"value": "{{oauthClientSecret}}",
								"type": "string"
							},
							{
								"key": "username",
								"value": "{{oauthClientId}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"id": "6c994f82-66b1-4469-b8bf-0dea2667ca63",
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"id": "b820f91b-2aa2-4bed-bedf-77f8098e9fe7",
								"type": "text/javascript"
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{oauthClientCredentialsToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f7719e8c-e0e7-45ce-be1c-450d3f8c3fdf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "20bc1cca-9c3b-458f-b075-24575ff6ad49",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Device Token",
			"description": "",
			"item": [
				{
					"name": "Create a new user",
					"description": "Workflow to test creation of a new user",
					"item": [
						{
							"name": "Add a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "25c77851-7eea-4148-bbc6-989dc6f98977",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('userNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "175b8577-1658-4470-a8dd-57dcc79c957b",
										"type": "text/javascript",
										"exec": [
											"postman.setGlobalVariable(\"commonTests\", () =>{",
											"    ",
											"  // The Content-Type must be JSON",
											"  tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
											"",
											"  // The response time must be less than 500 milliseconds",
											"  tests[\"Response time is acceptable\"] = responseTime < 500;",
											"",
											"  // The response body must include an \"id\" property",
											"  const jsonResponse = JSON.parse(responseBody);",
											"  const jsendSchema = JSON.parse(environment.JSendBasicSchema);",
											"  tests[\"Response matches JSend schema\"] = tv4.validate(jsonResponse, jsendSchema);",
											"  tests[\"Response 'status' equals 'success'\"] = jsonResponse.status === \"success\";",
											"})",
											"",
											"eval(globals.commonTests)();",
											"",
											"",
											"const addUserResponse = JSON.parse(responseBody);",
											"const addUserResponseSchema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"user\": {",
											"          \"$id\": \"/properties/data/properties/user\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"firstName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/firstName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"lastName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/lastName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/_id\",",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"email\",",
											"            \"firstName\",",
											"            \"lastName\",",
											"            \"_id\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"user\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"}",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Response schema is valid\"] = tv4.validate(addUserResponse, addUserResponseSchema);",
											"",
											"pm.environment.set('userId', addUserResponse.data.user._id);",
											"pm.environment.set('userEmail', addUserResponse.data.user.email);",
											"",
											"",
											"",
											"pm.sendRequest({",
											"    url: environment.hostname + '/api/oauth2/token',",
											"    method: 'POST',",
											"    header: {",
											"        'Authorization':'Basic ZG1pb3M6cGFzc3dvcmQ=',",
											"        'content-type':'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"        \t\"grant_type\": \"password\",",
											"        \t\"username\": addUserResponse.data.user.email,",
											"        \t\"password\": \"password\"",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    pm.environment.set(\"oauthResourceOwnerToken\", res.json().access_token);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"user{{userNumber}}@mail.com\",\n\t\"password\": \"password\",\n\t\"firstName\": \"firstName{{userNumber}}\",\n\t\"lastName\": \"lastName{{userNumber}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/users",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{oauthClientCredentialsToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "02846f53-b612-4b18-89e5-4222f395c633",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6311cc12-6636-44bb-9f98-b4b134d8db08",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Register device token",
					"description": "",
					"item": [
						{
							"name": "Register user with device token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "74d1a058-f07b-44b5-b669-6724c08af11b",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set(\"deviceToken\", \"deviceToken\" + Math.random(1000))"
										]
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"userId\": \"{{userId}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/device-tokens/",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"device-tokens",
										""
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete a user",
					"description": "",
					"item": [
						{
							"name": "Delete a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d1e5ef4-59be-4be3-826f-043b0491717d",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{oauthResourceOwnerToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1998edce-5b39-423e-98f3-6967ff3f0a16",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9f378bb3-9420-4bf6-812a-c5edf55bf065",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{oauthClientCredentialsToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "36069a09-315e-4b53-bb99-2ba0c2c90e9e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ef09751c-4170-47e5-8db2-1ff535087e78",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Usage Goals",
			"description": "",
			"item": [
				{
					"name": "Create a new user",
					"description": "Workflow to test creation of a new user",
					"item": [
						{
							"name": "Add a user",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "25c77851-7eea-4148-bbc6-989dc6f98977",
										"type": "text/javascript",
										"exec": [
											"pm.environment.set('userNumber', Math.floor(Math.random()*100000));"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "175b8577-1658-4470-a8dd-57dcc79c957b",
										"type": "text/javascript",
										"exec": [
											"postman.setGlobalVariable(\"commonTests\", () =>{",
											"    ",
											"  // The Content-Type must be JSON",
											"  tests[\"Content-Type header includes application/json\"] = postman.getResponseHeader(\"Content-Type\").includes(\"application/json\");",
											"",
											"  // The response time must be less than 500 milliseconds",
											"  tests[\"Response time is acceptable\"] = responseTime < 500;",
											"",
											"  // The response body must include an \"id\" property",
											"  const jsonResponse = JSON.parse(responseBody);",
											"  const jsendSchema = JSON.parse(environment.JSendBasicSchema);",
											"  tests[\"Response matches JSend schema\"] = tv4.validate(jsonResponse, jsendSchema);",
											"  tests[\"Response 'status' equals 'success'\"] = jsonResponse.status === \"success\";",
											"})",
											"",
											"eval(globals.commonTests)();",
											"",
											"",
											"const addUserResponse = JSON.parse(responseBody);",
											"const addUserResponseSchema = {",
											"  \"definitions\": {},",
											"  \"$schema\": \"http://json-schema.org/draft-06/schema#\",",
											"  \"$id\": \"https://digitalmonitor.tk/api/\",",
											"  \"type\": \"object\",",
											"  \"properties\": {",
											"    \"status\": {",
											"      \"$id\": \"/properties/status\",",
											"      \"type\": \"string\"",
											"    },",
											"    \"data\": {",
											"      \"$id\": \"/properties/data\",",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"user\": {",
											"          \"$id\": \"/properties/data/properties/user\",",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"__v\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/__v\",",
											"              \"type\": \"integer\"",
											"            },",
											"            \"email\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/email\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"firstName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/firstName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"lastName\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/lastName\",",
											"              \"type\": \"string\"",
											"            },",
											"            \"_id\": {",
											"              \"$id\": \"/properties/data/properties/user/properties/_id\",",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"__v\",",
											"            \"email\",",
											"            \"firstName\",",
											"            \"lastName\",",
											"            \"_id\"",
											"          ]",
											"        },",
											"        \"locations\": {",
											"          \"$id\": \"/properties/data/properties/locations\",",
											"          \"type\": \"array\",",
											"          \"items\": {",
											"            \"$id\": \"/properties/data/properties/locations/items\",",
											"            \"type\": \"string\"",
											"          }",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"user\",",
											"        \"locations\"",
											"      ]",
											"    }",
											"  },",
											"  \"required\": [",
											"    \"status\",",
											"    \"data\"",
											"  ]",
											"}",
											"",
											"tests[\"Status code is 201\"] = responseCode.code === 201;",
											"tests[\"Response schema is valid\"] = tv4.validate(addUserResponse, addUserResponseSchema);",
											"",
											"pm.environment.set('userId', addUserResponse.data.user._id);",
											"pm.environment.set('userEmail', addUserResponse.data.user.email);",
											"",
											"",
											"",
											"pm.sendRequest({",
											"    url: environment.hostname + '/api/oauth2/token',",
											"    method: 'POST',",
											"    header: {",
											"        'Authorization':'Basic ZG1pb3M6cGFzc3dvcmQ=',",
											"        'content-type':'application/json'",
											"    },",
											"    body: {",
											"        mode: 'raw',",
											"        raw: JSON.stringify({",
											"        \t\"grant_type\": \"password\",",
											"        \t\"username\": addUserResponse.data.user.email,",
											"        \t\"password\": \"password\"",
											"        })",
											"    }",
											"}, function (err, res) {",
											"    pm.environment.set(\"oauthResourceOwnerToken\", res.json().access_token);",
											"});"
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "",
										"value": ""
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\": \"user{{userNumber}}@mail.com\",\n\t\"password\": \"password\",\n\t\"firstName\": \"firstName{{userNumber}}\",\n\t\"lastName\": \"lastName{{userNumber}}\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/users",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{oauthClientCredentialsToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "02846f53-b612-4b18-89e5-4222f395c633",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "6311cc12-6636-44bb-9f98-b4b134d8db08",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Create a new usage goal",
					"description": "",
					"item": [
						{
							"name": "Add user usage goal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc42833c-00db-409d-89b3-84161282d320",
										"type": "text/javascript",
										"exec": [
											"const json = JSON.parse(responseBody);",
											"pm.environment.set('usageGoalId', json.data.usageGoal._id);",
											""
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{oauthResourceOwnerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"duration\": 172800,\n\t\"period\": \"monthly\"\n}"
								},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}/usage-goals/",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}",
										"usage-goals",
										""
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete a usage goal",
					"description": "",
					"item": [
						{
							"name": "Delete user usage goal",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "215b599a-493b-4028-819e-c6fe3831ce98",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{oauthResourceOwnerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}/usage-goals/{{usageGoalId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}",
										"usage-goals",
										"{{usageGoalId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "Delete a user",
					"description": "",
					"item": [
						{
							"name": "Delete a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3d1e5ef4-59be-4be3-826f-043b0491717d",
										"type": "text/javascript",
										"exec": [
											"eval(globals.commonTests)();",
											"",
											"tests[\"Status code is 200\"] = responseCode.code = 200;",
											""
										]
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {},
								"url": {
									"raw": "{{hostname}}/api/users/{{userId}}",
									"host": [
										"{{hostname}}"
									],
									"path": [
										"api",
										"users",
										"{{userId}}"
									]
								},
								"description": ""
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{oauthResourceOwnerToken}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "1998edce-5b39-423e-98f3-6967ff3f0a16",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9f378bb3-9420-4bf6-812a-c5edf55bf065",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}